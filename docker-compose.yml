version: '3'
services:
    web:
        image: rihoj/nginxnode
        container_name: ${WEB_DOMAIN}
        hostname: ${WEB_HOST}
        restart: unless-stopped
        volumes:
            - ../web:/var/www/html
            - ./conf/nginx/default.template.conf:/etc/nginx/conf.d/default.template
        expose:
            - 80
        links:
            - db:${MYSQL_HOST}
        env_file:
            - .env
        command: sh -c "envsubst \"`env | awk -F = '{printf \" $$%s\", $$1}'`\" < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;' && chown -R www-data:www-data /var/www/html/ && chmod 777 -R /var/www/html/storage/logs"
        depends_on:
            - php
            - db
            - mailhog
            - redis
            - localstack

    php:
        image: nanoninja/php-fpm:${PHP_VERSION}
        container_name: ${PHP_HOST}
        hostname: ${PHP_HOST}
        restart: unless-stopped
        volumes:
            - ./conf/php/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ../web:/var/www/html
    composer:
        image: "composer"
        volumes:
            - ../web:/app
        command: install --ignore-platform-reqs
    mailhog:
        image: mailhog/mailhog
        container_name: ${MAILHOG_DOMAIN}
        hostname: ${MAILHOG_HOST}
        restart: unless-stopped
        expose:
            - 8025
            - 1025
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: ${PHPMYADMIN_DOMAIN}
        hostname: ${PHPMYADMIN_HOST}
        expose:
            - 80
        env_file:
            - .env
        environment:
            - PMA_HOST=${MYSQL_HOST}
            - PMA_ABSOLUTE_URI=https://${PHPMYADMIN_DOMAIN}.${WEB_DOMAIN}.${ROOT_DOMAIN}/
        restart: unless-stopped
        depends_on:
            - db
        links:
            - "db:db"
        volumes:
            - ./conf/phpmyadmin/config.php:/etc/phpmyadmin/config.user.inc.php
            - ./conf/ssl/server.key:/etc/mysql/server.key
            - ./conf/ssl/server.pem:/etc/mysql/server.pem
            - ./conf/ssl/cacert.pem:/etc/mysql/cacert.pem
    db:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        hostname: ${MYSQL_HOST}
        command: --default-authentication-plugin=mysql_native_password
        restart: unless-stopped
        env_file:
            - .env
        expose:
            - 3306
        volumes:
            - ./data/db/mysql:/var/lib/mysql
            - ./conf/mysql:/etc/mysql/conf.d
            - ./conf/ssl/server.key:/etc/ssl/server.key
            - ./conf/ssl/server.pem:/etc/ssl/server.pem
            - ./conf/ssl/cacert.pem:/etc/ssl/cacert.pem
    redis:
        image: "redis:alpine"
        container_name: ${REDIS_HOST}
        hostname: ${REDIS_HOST}
        restart: unless-stopped
        expose:
            - 6379
    localstack:
        image: localstack/localstack
        container_name: ${LOCALSTACK_DOMAIN}
        hostname: ${LOCALSTACK_HOST}
        restart: unless-stopped
        environment:
            - HOSTNAME=${LOCALSTACK_HOST}
            - HOSTNAME_EXTERNAL=${LOCALSTACK_DOMAIN}.${WEB_DOMAIN}.${ROOT_DOMAIN}
            - SERVICES=${LOCALSTACK_SERVICES}
            - DATA_DIR=${LOCALSTACK_DATA_DIR}
        volumes:
            - ./conf/localstack/aws/:/root/.aws/
        expose:
            - 8080
            - 4567
            - 4568
            - 4569
            - 4570
            - 4571
            - 4572
            - 4573
            - 4574
            - 4575
            - 4576
            - 4577
            - 4578
            - 4579
            - 4580
            - 4581
            - 4582
            - 4583
            - 4584
    aws:
        image: mesosphere/aws-cli
        hostname: aws.io
        container_name: aws-cli
        entrypoint: /etc/scripts/aws_startup.sh
        depends_on:
            - localstack
            - nginx-proxy
        environment:
            - AWS_ACCESS_KEY_ID=foo
            - AWS_SECRET_ACCESS_KEY=bar
            - AWS_DEFAULT_REGION=us-east-1
        env_file:
            - ".env"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./conf/localstack/aws/:/root/.aws/
            - ./scripts/aws_startup.sh:/etc/scripts/aws_startup.sh
    dns:
        image: defreitas/dns-proxy-server
        hostname: ${DNS_HOST}
        container_name: ${DNS_DOMAIN}
        restart: unless-stopped
        env_file:
            - .env
        expose:
            - 80
        volumes:
          - /etc/resolv.conf:/etc/resolv.conf
          - /var/run/docker.sock:/var/run/docker.sock
          - ./conf/dns/config.json:/app/conf/config.json
    nginx-proxy:
        image: nginx:alpine
        container_name: proxy
        restart: unless-stopped
        env_file:
            - .env
        command: sh -c "/etc/scripts/proxy.sh"
        links:
            - mailhog
            - phpmyadmin
            - redis
            - localstack
            - web
            - php
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - /var/run/docker.sock:/tmp/docker.sock:ro
          - ./conf/proxy:/etc/nginx/conf.d.templates
          - ./scripts/proxy.sh:/etc/scripts/proxy.sh
          - ./conf/ssl:/etc/ssl
